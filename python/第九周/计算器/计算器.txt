使用 tkinter 库 编写计算器界面

要求如下

设置窗口不可改变大小

窗口大小固定为300x500

计算机按键有

数字键

正负号键

小数点键

四则运算：+ - * / 

等号键

清除按键：CE 

重新输入：C

退格键

示例代码：
import tkinter as tk  
  
root = tk.Tk()  
root.geometry('300x500')  
root.title("计算器")  
root.resizable(False, False)  
  
# 显示区域  
display_area = tk.Frame(root, width=300, height=125)  
display_area.pack(fill=tk.X, padx=0, pady=0)  # 填充水平方向，不留边距  
  
# 显示标签  
  
display_label = tk.Label(display_area, text='0', font=('Helvetica', 36, 'bold'), anchor='e', justify='right')  
display_label.pack(fill=tk.X, expand=True, padx=10, pady=10)  # 让Label水平填充，并添加内边距  
  
# 为了确保display_label能够垂直居中，我们可以使用place布局或者调整pack的参数  
# 但由于我们已经让display_label_frame填充了display_area，并且display_area的高度是固定的，  
# 所以display_label会在display_label_frame中垂直居中（因为expand=True和fill=tk.BOTH会使得display_label_frame填充整个display_area）  
# 这里的padx和pady是为了给Label添加一些内边距，使其看起来不那么拥挤  
  
# 按钮区域  
button_frame = tk.Frame(root, width=300, height=375, background='pink')  
button_frame.pack(fill=tk.BOTH, padx=0, pady=0)  
  
# # 定义按钮的字体和大小  
# ...（前面的代码不变）  
  
# 定义按钮的字体、大小、以及内外边距  
button_font = ('Helvetica', 18, 'bold')  
button_width = 10  # 设置按钮的宽度（字符数）  
button_height = 50  # 设置按钮的高度（像素）  
button_padx = 10  # 设置按钮内部的水平边距（像素）  
button_pady = 10  # 设置按钮内部的垂直边距（像素）  
  
# 创建按钮  
buttons = [  
    ['CE', 'C', "\u2190", '/'],  
    ['7', '8', '9', '*'],  
    ['4', '5', '6', '-'],  
    ['1', '2', '3', '+'],  
    ['+/-', '0', '.', '=']  
]  
button_list = []
row_index = 0  
for row in buttons:  
    col_index = 0  
    for button_text in row:  
        button = tk.Button(button_frame, text=button_text, font=button_font, width=button_width, height=button_height, padx=button_padx, pady=button_pady)  
        button.grid(row=row_index, column=col_index, sticky=tk.W+tk.E+tk.N+tk.S)  
        button_list.append(button)
        col_index += 1  
    row_index += 1  
  
# 设置所有行和列的权重为1，以便它们均匀分布多余的空间  
for i in range(5):  # 假设有5行  
    button_frame.grid_rowconfigure(i, weight=1)  
for i in range(4):  # 假设有4列  
    button_frame.grid_columnconfigure(i, weight=1)  



root.mainloop()